วิธีการรันโปรแกรม
- รันผ่านตัวไฟล์ HTMl ที่อยู่ภายในโฟลเดอร์เลยค่ะ 

วิธีการออกแบบโปรแกรม / Algorithm ที่ใช้
- เมื่อกดเข้าตัวเว็บไซต์ มันจะทำการรันฟังก์ชั่นสร้างตารางXOขึ้นมาแบบสมมาตร โดยกำหนดให้เริ่มที่ 3 * 3 
    ภายในหน้าต่างหลักจะประกอบไปด้วยชื่อเกมส์ (Tic Tac Toe) ด้านบนสุดของหัวตาราง, มีStatusบอกเทิร์นของผู้เล่น / ชนะแพ้, ตาราง XO, และมุมซ้ายล่างที่เป็นตัวตั้งค่าตาราง
    หน้าต่างตัวตั้งค่าตารางตรงมุมซ้ายล่างจะประกอบด้วยขนาดตาราง (n x n), มีปุ่มเพิ่มลดขนาดแบบสุดเพดาน (น้อยที่สุด 3 - มากที่สุด 7), มีปุ่มเพิ่มลดทีละขั้น(+-1), และปุ่มรีสตาร์ทเกม
        - ปุ่มเพิ่มลดเมื่อกดจะทำการรีสตาร์ทตัวเล่นในตารางไปด้วย หากมีการเล่นหรือกดภายในตารางไปแล้ว แต่กดปุ่มปรับแต่งตาราง มันจะรีเซ็ทตัว xo ในตารางทั้งหมด
        - หากมีการกดปุ่มเพิ่มลดในขณะที่ตารางนั้นถึงจุดที่สูงสุดหรือน้อยที่สุดแล้ว (3 x 3, 7 x 7) ตารางจะไม่เพิ่มช่องอีก, และไม่มีอะไรเปลี่ยนแปลง อีกทั้งยังรีเซ็ตตารางเหมือนเดิม

- เริ่มต้นหน้าเว็บ ทางตารางจะทำการรันตัวฟังก์ชั่นเขียนเงื่อนไขในการชนะขึ้นมาใน array winConditionals
    เงื่อนไขในการชนะจะถูกตั้งเป็น null ในตอนแรก และจะเริ่มกำหนดขนาดเมือรัน for ตามไซส์ของตารางที่ถูกส่งเข้ามายังฟังก์ชั่น และเมื่อได้คำตอบจะการ push ไปเขียนใน array คำตอบ
        - หากเป็นการชนะในแนว row จะเข้าลูปเขียนโดย [i x ขนาด + j] ; j = range ของคำตอบ (0 - (n-1))
            ex. 3x3 ; คำตอบที่ 2  = [1 x 3 + 0, 1 x 3 + 1, 1 x 3 + 2] = [3, 4, 5]
        - หากเป็นการชนะในแนว column จะเข้าลูปเขียนโดย [j x ขนาด + j] ; j = range ของคำตอบ (0 - (n-1))
            ex. 3x3 ; คำตอบที่ 2 = [0 x 3 + 1, 1 x 3 + 1 , 2 x 3 + 1] = [1, 4, 7]
        - หากเป็นการชนะในแนวแทยงลงขวา จะเข้าลูปเขียนโดย [i x (ขนาด + 1)] ; i = range ของคำตอบ (0 - (n-1))
            ex. 3x3 ; [0 x (3 + 1), 1 x (3 + 1), 2 x (3 + 1)] = [0, 4, 8]
        - หากเป็นการชนะในแนวแทยงลงซ้าย จะเข้าลูปเขียนโดย [(i + 1) x (ขนาด - 1)] ; i = range ของคำตอบ (0 - (n-1))
            ex. 3x3 ; [(0 + 1) x (3 - 1), (1 + 1) x (3 - 1), (2 + 1) x (3 - 1)] = [2, 4, 6]

- เมื่อเริ่มคลิ๊กช่องในตาราง มันจะไปรันที่ฟังก์ชั่น cellClicked เพื่อเช็คว่าภายในช่องนั้นมีการเก็บค่าอยู่แล้วรึยัง หากมีค่าเป็น null มันจะทำการเขียนค่าลงไปใน index นั้น 
แต่ถ้ามีอยู่แล้วมันก็จะไม่เปลี่ยนเทิร์นและเปลี่ยนค่าให้เพื่อป้องกันการเขียนทับของผู้เล่นกันในตาราง และจะส่งต่อไปยังฟังก์ชั่นเช็คเงื่อนไขในการชนะ, เปลี่ยนstatus

- หากเขียนลงเรียบร้อย ฟังก์ชั่นการเช็คเงื่อนไขในการชนะก็จะทำการเช็คเทียบกับ array winCon ที่เขียนไว้ก่อนหน้า ถ้าหากเจอตัวเลขที่่ตรงกัน status จะถูกเปลี่ยนเป็นผู้เล่นนั้นชนะ และไม่สามารถ
กดเพิ่มในตาราง xo ได้นอกจากจะทำการรีสตาร์ทหรือเปลี่ยนขนาด, แต่ถ้าหากยังไม่มีผู้ชนะ status จะถูกรันไปเปลี่ยนเป็นผู้เล่นอีกคนในฟังก์ชั่นต่อไปแทน

PS : 
- ส่วนแถบขวาตอนแรกจะทำเป็นตัวเก็บข้อมูล มีประวัติขึ้นตามจำนวนรอบที่เล่นและสามารถกดดู replay move ของตัวเกม xo ที่เล่นก่อนหน้า แต่เกิดปัญหานิดหน่อยทำให้ไม่สามารถทำได้ตามที่วางไว้ค่ะ TT
- สกอร์ที่อยู่ทางด้านขวาบนกะจะเขียนเป็นจำนวนแต้มของผู้เล่น x หรือ o แต่เหมือนจะมีปัญหาอีกที่ เลยไม่ได้ใส่ลงไปค่ะ